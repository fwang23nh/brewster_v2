5c5
<   subroutine cloudcalcs(column,sizdist,miewave,mierad,clouddata)
---
>   subroutine cloudatlas(column,sizdist)
16c16
<     integer :: loc1,loc1a,loc1b,loc1m,nmiewave,nrad
---
>     integer :: sizdist,loc1,loc1a,loc1b,loc1m
18,20c18
<     integer,intent(in):: sizdist(:)
<     double precision,intent(in):: clouddata(:,:,:,:)
<     double precision,intent(in):: miewave(:),mierad(:)
---
>     character(len=50) :: miefile
22,24c20,22
<     double precision, allocatable, dimension(:) :: miewaven, wdiff,ext,scat,cqs
<     double precision, allocatable, dimension(:) :: radius
<     double precision, allocatable, dimension(:) :: dr, rup
---
>     double precision, dimension(nmiewave):: miewavelen,miewaven, wdiff,ext,scat,cqs
>     double precision, allocatable, dimension(:,:) :: radius_in, radius
>     double precision, allocatable, dimension(:,:) :: dr, rup
31d28
< 
40,49c37,40
< 
<     ! clouddata is (cloud,3,nwave,nrad)
<     ! the 3 columns for data are qscat, qext and cosqs.
<     ! this is the same order that mie code from EGP outputs the mie coefficients
<     ! into .mieff files.
<     ! kept to be consistent with other codes using the same heritage
< 
<     nmiewave = size(miewave)
<     nrad = size(mierad)
<     allocate(radius(nrad), dr(nrad), rup(nrad))
---
>     allocate(qscat(nmiewave,nrad,nclouds),qext(nmiewave,nrad,nclouds))
>     allocate(cos_qscat(nmiewave,nrad,nclouds))
>     allocate(radius_in(nrad,nclouds), radius(nrad,nclouds))
>     allocate(dr(nrad,nclouds), rup(nrad,nclouds))
58d48
<     !write(1,*) 'here clouds 54'   
60,63c50,51
<     
<     ! these are set for EGP cases. Ditched soot. it will throw an error. 
<     vrat = 2.2
<     rmin = 1e-7
---
>     !call init_column(column)
>     do icloud = 1, nclouds
65,67c53,54
<     pw = 1. / 3.
<     f1 = ( 2*vrat / ( 1 + vrat) )**pw
<     f2 = ( 2 / ( 1 + vrat ) )**pw * vrat**(pw-1)
---
>        ! This bit is lifted from setup_clouds3.1.f in EGP
>        ! it sets up the radius grid.
69,72c56,66
<     do irad = 1, nrad
<        radius(irad) = rmin * vrat**(float(irad-1)/3.)
<        rup(irad) = f1*radius(irad)
<        dr(irad) = f2*radius(irad)
---
>        ! constants/ parameters are in sizes
>        
>        ! set rmin and vrat here though:
>        
>        if (trim(column(1)%cloud(icloud)%name) .eq. 'soot' ) then
>           vrat = 1.3
>           rmin = 1e-8
>        else
>           vrat = 2.2
>           rmin = 1e-7
>        endif
74,79d67
<     if (abs(radius(irad) - mierad(irad)) .gt. &
<          0.001*radius(irad)) then
<        write(1,*) "Radius grid mismatch in mie data"
<        stop
<     end if
<     enddo
81c69,80
<     miewaven = 1.0 / miewave
---
>        
>        pw = 1. / 3.
>        f1 = ( 2*vrat / ( 1 + vrat) )**pw
>        f2 = ( 2 / ( 1 + vrat ) )**pw * vrat**(pw-1)
>        
>        do irad = 1, nrad
>           radius(irad,icloud) = rmin * vrat**(float(irad-1)/3.)
>           rup(irad,icloud) = f1*radius(irad,icloud)
>           dr(irad,icloud) = f2*radius(irad,icloud)
>        enddo
>        
>        ! first get the mie or DHS  coefficients for the condensate
82a82,117
>        if (sizdist .gt. 0) then
>           write(miefile,"(A,A,A)")"../Clouds/",trim(column(1)%cloud(icloud)%name),".mieff"
>        else if (sizdist .lt. 0) then
>           write(miefile,"(A,A,A)")"../Clouds/",trim(column(1)%cloud(icloud)%name),".dhs"
>        end if
>           
>        
>        
>        open(unit=10, file= miefile, status='old')
>        
>        
>        read(10,*) idum1, idum2
>        
>        if (idum1 .ne. nmiewave .or. idum2 .ne. nrad) then
>           write(*,*) "Problem with mie coefficients file contents wrong waves or radii",trim(miefile)
>           stop
>        end if
>        
>        do irad = 1, nrad
>           read(10,*) radius_in(irad,icloud)
>           if (abs(radius(irad,icloud) - radius_in(irad,icloud)) .gt. &
>                0.01*radius(irad,icloud)) then
>              write(*,*) "Radius grid mismatch in mie file: ",trim(miefile)
>              stop
>           end if
>           do imiewave = 1, nmiewave
>              read(10,*) miewavelen(imiewave), qscat(imiewave,irad,icloud), &
>                   qext(imiewave,irad,icloud), cos_qscat(imiewave,irad,icloud)
>           end do
>        end do
>        close(10)   
>     end do  ! cloud loop
> 
>     
>     miewaven = 1.0 / miewavelen
> 
84c119
<     loc = minloc(abs(miewave - 1e-4))
---
>     loc = minloc(abs(miewavelen - 1e-4))
105d139
< 
112d145
<     !write(1,*) 'here clouds 112'   
122c155
<              if (sizdist(icloud) .eq. 2) then
---
>              if (abs(sizdist) .eq. 2) then
138,139c171
<       !write(1,*) 'here clouds 138'   
<                
---
>                 
141,142c173,174
<                    rr = radius(irad)
<                    arg1 = dr(irad) / ( sqrt(2.*PI)*rr*log(rsig) )
---
>                    rr = radius(irad,icloud)
>                    arg1 = dr(irad,icloud) / ( sqrt(2.*PI)*rr*log(rsig) )
144c176
<                    qpir2 = PI * rr**2 * clouddata(icloud,2,loc1,irad)
---
>                    qpir2 = PI * rr**2 * qext(loc1,irad,icloud)
151d182
<      !write(1,*) 'here clouds 145'   
158,159c189,190
<                       rr = mierad(irad)
<                       arg1 = dr(irad) / ( sqrt(2.*PI)*rr*log(rsig) )
---
>                       rr = radius(irad,icloud)
>                       arg1 = dr(irad,icloud) / ( sqrt(2.*PI)*rr*log(rsig) )
163,165c194
<                       ext_cloud(ilayer,imiewave,icloud) = &
<                            ext_cloud(ilayer,imiewave,icloud) + &
<                            clouddata(icloud,2,imiewave,irad)*pir2ndz      
---
>                       
168c197,200
<                            clouddata(icloud,1,imiewave,irad)*pir2ndz
---
>                            qscat(imiewave,irad,icloud)*pir2ndz
>                       ext_cloud(ilayer,imiewave,icloud) = &
>                            ext_cloud(ilayer,imiewave,icloud) + &
>                            qext(imiewave,irad,icloud)*pir2ndz
171c203
<                            clouddata(icloud,3,imiewave,irad)*pir2ndz
---
>                            cos_qscat(imiewave,irad,icloud)*pir2ndz
184c216
<              elseif (sizdist(icloud) .eq. 1) then
---
>              elseif (abs(sizdist) .eq. 1) then
187c219
< 
---
>                 
192c224
<                 !write(1,*) 'here clouds 189'   
---
>                 
198,199c230,231
<                    rr = radius(irad)
<                    drr = dr(irad)
---
>                    rr = radius(irad,icloud)
>                    drr = dr(irad,icloud)
204,207c236
<                    !write(1,*) 'here clouds 202'
<                    !write(1,*) clouddata(icloud,1,loc1,irad)
<                    argext = log(clouddata(icloud,2,loc1,irad) * PI * rr**2.)
<                    !write(1,*) 'here clouds 204'   
---
>                    argext = log(qext(loc1,irad,icloud) * PI * rr**2.)
211,212c240
<                 !write(1,*) 'here clouds 204'   
<                
---
>                 
220d247
<                 !write(1,*) 'here clouds 213'   
247d273
<                 !write(1,*) 'here clouds 239'   
251,252c277,278
<                       rr = radius(irad)
<                       drr = dr(irad)
---
>                       rr = radius(irad,icloud)
>                       drr = dr(irad,icloud)
257,259c283,285
<                       argscat = log(clouddata(icloud,1,loc1,irad) * PI * rr**2)
<                       argext = log(clouddata(icloud,2,loc1,irad) * PI * rr**2)
<                       argcosqs = clouddata(icloud,3,loc1,irad) * PI * rr**2
---
>                       argscat = log(qscat(imiewave,irad,icloud) * PI * rr**2)
>                       argext = log(qext(imiewave,irad,icloud) * PI * rr**2)
>                       argcosqs =  cos_qscat(imiewave,irad,icloud) * PI * rr**2
289,290c315
<        !write(1,*) 'here clouds 281'   
< 
---
>        
371c396
<     deallocate(radius,dr,rup)
---
>     deallocate(qscat,qext,cos_qscat,radius_in,radius,dr,rup)
375c400
< end subroutine cloudcalcs
---
> end subroutine cloudatlas
